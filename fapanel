-- LocalScript in StarterPlayerScripts
local Rayfield = loadstring(game:HttpGet("https://raw.githubusercontent.com/SiriusSoftwareLtd/Rayfield/main/source.lua"))()

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HitboxProperties = ReplicatedStorage:WaitForChild("HitboxProperties")

local Window = Rayfield:CreateWindow({
    Name = "script",
    LoadingTitle = "Initializing...",
    LoadingSubtitle = "Please wait",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "fts"
    }
})

local MainTab = Window:CreateTab("Main", 4483362458)
local Section = MainTab:CreateSection("Player Selection")

-- Correct TextBox/Input that actually accepts typing
local Input = MainTab:CreateInput({
    Name = "Player Username",
    PlaceholderText = "Enter username or display name and press Enter",
    CurrentValue = "",
    RemoveTextAfterFocusLost = false,
    OnEnter = true,
    Callback = function(text)
        if typeof(text) ~= "string" or #text == 0 then
            Rayfield:Notify({Title = "Input", Content = "Please type something.", Duration = 2})
            return
        end

        local target
        local query = text:lower()
        for _, p in ipairs(Players:GetPlayers()) do
            if p.Name:lower() == query or p.DisplayName:lower() == query then
                target = p
                break
            end
        end

        if not target then
            Rayfield:Notify({Title = "Error", Content = "Player not found.", Duration = 3})
            return
        end

        local char = target.Character
        if not char then
            Rayfield:Notify({Title = "Error", Content = "Player has no character.", Duration = 3})
            return
        end

        local torso = char:FindFirstChild("UpperTorso") or char:FindFirstChild("LowerTorso") or char:FindFirstChild("Torso")
        if not torso then
            Rayfield:Notify({Title = "Error", Content = "Torso not found.", Duration = 3})
            return
        end

        local args = {
            torso,
            false,           -- your unknown boolean param
            torso.Color,
            true,            -- your unknown boolean param
            Vector3.new(4,4,4)
        }

        HitboxProperties:FireServer(unpack(args))

        Rayfield:Notify({
            Title = "Sent",
            Content = ("HitboxProperties fired for %s"):format(target.Name),
            Duration = 3
        })
    end
})

Rayfield:LoadConfiguration()
