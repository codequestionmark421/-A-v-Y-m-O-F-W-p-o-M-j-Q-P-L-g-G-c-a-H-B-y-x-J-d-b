-- Combined Script (auto-generated by script Combiner Pro)e

-- Module: farm

local farm = (function()
local module = {}
function module:Execute(loop)
	loop = loop
	
	for _, obj in ipairs(workspace:GetDescendants()) do
		if obj:IsA("BasePart") then
			local r = math.random(0, 255) / 255
			local g = math.random(0, 255) / 255
			local b = math.random(0, 255) / 255

			local args = {
				game:GetService("Players").LocalPlayer.Character:WaitForChild("Right Arm"),
				Color3.new(r, g, b)
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("SetPartColor"):FireServer(unpack(args))
		end
	end
end
return module

end)()

-- Module: colorloop

local colorloop = (function()
local module = {}
loop = false

function module:Execute(loop)
	loop = loop
end

task.spawn(function()
	while true do
		wait()
		if not loop then continue end
		require(script.Parent.farm):Execute()
	end
end)
return module

end)()


-- Script: LocalScript

do
-- Load Rayfield library
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Create a window
local Window = Rayfield:CreateWindow({
	Name = "Rayfield Example",
	LoadingTitle = "Loading Rayfield",
	LoadingSubtitle = "Please wait...",
	Theme = "Default",
	ToggleKey = Enum.KeyCode.LeftControl
})

-- Create a tab within the window
local Tab = Window:CreateTab("Main Tab", 4483362458)

-- Create a button in the tab
Tab:CreateButton({
	Name = "change all colors",
	Callback = function()
		farm:Execute()
	end
})

local Toggle = Tab:CreateToggle({
	Name = "change all colors (loop)",
	CurrentValue = false,
	Flag = "colortoggle", -- used for saving config states
	Callback = function(Value)
		colorloop:Execute(Value)
	end,
})


Rayfield:LoadConfiguration()

end
